================================================================================
MultiGridTV plugin
================================================================================
Transform template variables into a table/grid
for the MODX Evolution content management framework

================================================================================
Features:
================================================================================
  * With this plugin, one or more MODX template variables can be transformed
    into a small table/grid. 
  * The number of columns and the column headers can be set in the plugin
    configuration.
  * The number of rows can be modified during editing the MODX document.
  * The table/grid is sortable.
  * The configuration of transform for all TVs can be done either in the MODX plugin
    configuration or in configuration files

================================================================================
Installation:
================================================================================
Upload the 'multigrid' folder to 'assets/plugins' and creeate a plugin with the
following code:

  include(MODX_BASE_PATH.'assets/plugins/multigrid/MultiGrid.plugin.php');

and the event "OnDocFormRender".

================================================================================
Configuration:
================================================================================
The plugin configuration has to be set with the following lines:

&configs=Use Config Files:;list;yes,no;no &tvids=TV IDs:;text;1 
&tpl=Template IDs:;text; &roles=Roles:;text; 
&columnNames=Column Names:;text;key,value

'Use Config Files'  if set to yes the folder 'configs' will be searched for
                    *.config.inc.php files which are processed as different
                    settings for groups of template variables. This is the 
                    only way to set DIFFERENT settings for groups of template 
                    variables. 
'TV IDs'            is the id (or several comma separated ids) of a textarea
                    template variable, which will be transformed into a grid.
                    If several comma separated ids are used, the following
                    settings are used for EVERY template variable referenced.
'Template'          is the id (or several comma separated ids) of a template 
                    the plugin is executed in.
'Role'              is the id (or several comma separated ids) of a manager 
                    user who can use the plugin.
'Column Names'      contains the comma separated column names of the generated
                    table/grid.
                    
================================================================================
Example configuration:
================================================================================

If we want to have

  * 3 GridTVs for the TVs "DataTable", "Options" and "People" with the ids
    5, 8 and 15
  * Usable in the templates with the ids 4 and 6
  * Accessable for editors (role 2) and administrators (role 1) only
  * With column names "col1", "col2", "col3" and "col4" for the first table,
    "key" and "value" for the second and "id", "first name" and "last name" for
    the third table,

then we have to write three configuration files (the first part of the filename
is not essential).

DataTable.config.inc.php 
<?php
$settings['tvids']            = 5,6; // 'TV IDs'
$settings['tplids']           = 4,6;
$settings['roles']            = 1,2;
$settings['columnNames']      = "col1,col2,col3,col4";
?>

Options.config.inc.php 
<?php
$settings['tvids']            = 8;
$settings['tplids']           = 4,6;
$settings['roles']            = 1,2;
$settings['columnNames']      = "key,value";
?>

People.config.inc.php 
<?php
$settings['tvids']            = 15;
$settings['tplids']           = 4,6;
$settings['roles']            = 1,2;
$settings['columnNames']      = "id,first name,last name";
?>

and enable 'Use Config Files'.

For one GridTV we could use the plugin configuration.

================================================================================
Snippet:
================================================================================
To display the template variable, create the snippet "MultiGrid" with the content:
return include(MODX_BASE_PATH.'assets/plugins/multigrid/MultiGrid.snippet.php');

and use snippet calls like these:

[!MultiGrid?
&tvName=`DataTable`
&outerTpl=`@CODE <ul>((wrapper))</ul>`
&rowTpl=`@CODE <li>((col1)), ((col2)), ((col3)), ((col4))</li>`
&config=`DataTable`
!]

[!MultiGrid? &tvName=`Options`!]

[!MultiGrid?
&tvName=`DataTable`
&columnNames=`id,firstName,lastName`
&rowTpl=`@CODE:<option value="((id)) ((firstName)) ((lastName))">((firstName)) ((lastName))</option>`
!]

================================================================================
Other notes:
================================================================================
The JSON string the grid is converted to starts with [[ and ends with ]] so the MODX parser 
thinks it contains a snippet. The package contains two PHx modifiers to test wether the 
variable is empty or filled.